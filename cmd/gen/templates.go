package main

import "text/template"

// Go 文件模板
// 使用 text/template 语法
// .PackageName - 生成的 Go 文件包名
// .StructName - 代表表的结构体名称 (e.g., UsersTable)
// .VarName - 结构体实例变量名 (e.g., Users)
// .TableName - 数据库中的原始表名
// .Columns - 列信息的切片，每个元素包含 GoFieldName 和 DBColumnName
const schemaTemplate = `// Code generated by datalayer_gen. DO NOT EDIT.
// Generated at {{ .Timestamp.Format "2006-01-02 15:04:05" }}
// Schema source: {{ .DbName }}.{{ .TableName }}

package {{ .PackageName }}

// {{ .StructName }} represents the schema for the '{{ .TableName }}' table.
// Accessing fields returns the corresponding database column name.
type {{ .StructName }} struct {
    {{- range .Columns }}
    {{ .GoFieldName }} string // {{ .DBColumnName }} ({{ .DBDataType }})
    {{- end }}
}

// {{ .VarName }} provides access to the column names of the '{{ .TableName }}' table.
var {{ .VarName }} = {{ .StructName }}{
    {{- range .Columns }}
    {{ .GoFieldName }}: "{{ .DBColumnName }}",
    {{- end }}
}

// TableName returns the actual table name.
func (t *{{ .StructName }}) TableName() string {
    return "{{ .TableName }}"
}
`

var tmpl *template.Template

func init() {
	var err error
	tmpl, err = template.New("schema").Parse(schemaTemplate)
	if err != nil {
		panic("failed to parse schema template: " + err.Error())
	}
}
